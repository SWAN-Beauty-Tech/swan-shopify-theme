{% doc %}
  @prompt
    We want to have a picture carusell with 6 different pictures which can be scrolled through by the visitor and underneath the picture we want to be able to describe what is on that picture., the image should have 9:16 format, I want to able to customize the fonts below the pictures

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-carousel-container-{{ ai_gen_id }} {
    max-width: 100%;
    margin: 0 auto;
    position: relative;
  }

  .ai-carousel-wrapper-{{ ai_gen_id }} {
    position: relative;
    overflow: hidden;
    border-radius: {{ block.settings.border_radius }}px;
    background-color: {{ block.settings.background_color }};
  }

  .ai-carousel-track-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.3s ease;
    will-change: transform;
  }

  .ai-carousel-slide-{{ ai_gen_id }} {
    min-width: 100%;
    position: relative;
  }

  .ai-carousel-image-container-{{ ai_gen_id }} {
    width: 100%;
    aspect-ratio: 9 / 16;
    position: relative;
    overflow: hidden;
  }

  .ai-carousel-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .ai-carousel-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-carousel-placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 200px;
    max-height: 200px;
  }

  .ai-carousel-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 8px 16px;
    background-color: rgba(255, 255, 255, 0.9);
    border-radius: 4px;
    font-size: 14px;
    color: #666;
    text-align: center;
    pointer-events: none;
  }

  .ai-carousel-description-{{ ai_gen_id }} {
    padding: {{ block.settings.description_padding }}px;
    background-color: {{ block.settings.description_background }};
    color: {{ block.settings.description_color }};
    text-align: {{ block.settings.description_alignment }};
    font-family: {{ block.settings.description_font.family }}, {{ block.settings.description_font.fallback_families }};
    font-style: {{ block.settings.description_font.style }};
    font-weight: {{ block.settings.description_font.weight }};
    font-size: {{ block.settings.description_font_size }}px;
    line-height: {{ block.settings.description_line_height }};
    letter-spacing: {{ block.settings.description_letter_spacing }}px;
  }

  .ai-carousel-controls-{{ ai_gen_id }} {
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    transform: translateY(-50%);
    pointer-events: none;
    z-index: 2;
  }

  .ai-carousel-button-{{ ai_gen_id }} {
    background-color: {{ block.settings.button_background }};
    color: {{ block.settings.button_color }};
    border: none;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    pointer-events: auto;
    transition: all 0.3s ease;
    margin: 0 20px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
  }

  .ai-carousel-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_background }};
    transform: scale(1.1);
  }

  .ai-carousel-button-{{ ai_gen_id }}:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }

  .ai-carousel-button-{{ ai_gen_id }} svg {
    width: 20px;
    height: 20px;
  }

  .ai-carousel-dots-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    padding: 20px;
    background-color: {{ block.settings.description_background }};
  }

  .ai-carousel-dot-{{ ai_gen_id }} {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: {{ block.settings.dot_inactive_color }};
    border: none;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-carousel-dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.dot_active_color }};
  }

  @media screen and (max-width: 749px) {
    .ai-carousel-button-{{ ai_gen_id }} {
      width: 40px;
      height: 40px;
      margin: 0 10px;
    }

    .ai-carousel-button-{{ ai_gen_id }} svg {
      width: 16px;
      height: 16px;
    }

    .ai-carousel-description-{{ ai_gen_id }} {
      font-size: {{ block.settings.description_font_size | times: 0.9 }}px;
    }
  }
{% endstyle %}<image-carousel-{{ ai_gen_id }}
  class="ai-carousel-container-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-carousel-wrapper-{{ ai_gen_id }}">
    <div class="ai-carousel-track-{{ ai_gen_id }}" data-track>
      {% for i in (1..6) %}
        {% liquid
          assign image_key = 'image_' | append: i
          assign description_key = 'description_' | append: i
          assign image = block.settings[image_key]
          assign description = block.settings[description_key]
        %}
        
        <div class="ai-carousel-slide-{{ ai_gen_id }}" data-slide="{{ forloop.index0 }}">
          <div class="ai-carousel-image-container-{{ ai_gen_id }}">
            {% if image %}
              <img
                src="{{ image | image_url: width: 800 }}"
                alt="{{ image.alt | escape }}"
                class="ai-carousel-image-{{ ai_gen_id }}"
                loading="{% if forloop.first %}eager{% else %}lazy{% endif %}"
                width="{{ image.width }}"
                height="{{ image.height }}"
              >
            {% else %}
              <div class="ai-carousel-placeholder-{{ ai_gen_id }}">
                {{ 'image' | placeholder_svg_tag }}<div class="ai-carousel-empty-state-{{ ai_gen_id }}">
                  Add image {{ i }}
                </div>
              </div>
            {% endif %}
          </div>
          
          {% if description != blank %}
            <div class="ai-carousel-description-{{ ai_gen_id }}">
              {{ description }}
            </div>
          {% endif %}
        </div>
      {% endfor %}
    </div>

    <div class="ai-carousel-controls-{{ ai_gen_id }}">
      <button
        class="ai-carousel-button-{{ ai_gen_id }}"
        data-prev
        aria-label="Previous image"
      >
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="15,18 9,12 15,6"></polyline>
        </svg>
      </button>
      
      <button
        class="ai-carousel-button-{{ ai_gen_id }}"
        data-next
        aria-label="Next image"
      >
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="9,18 15,12 9,6"></polyline>
        </svg>
      </button>
    </div>
  </div>

  <div class="ai-carousel-dots-{{ ai_gen_id }}">
    {% for i in (1..6) %}
      <button
        class="ai-carousel-dot-{{ ai_gen_id }}{% if forloop.first %} active{% endif %}"
        data-dot="{{ forloop.index0 }}"
        aria-label="Go to image {{ i }}"
      ></button>
    {% endfor %}
  </div>
</image-carousel-{{ ai_gen_id }}><script>
  (function() {
    class ImageCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.totalSlides = 6;
      }

      connectedCallback() {
        this.track = this.querySelector('[data-track]');
        this.prevButton = this.querySelector('[data-prev]');
        this.nextButton = this.querySelector('[data-next]');
        this.dots = this.querySelectorAll('[data-dot]');
        
        this.setupEventListeners();
        this.updateCarousel();
      }

      setupEventListeners() {
        this.prevButton.addEventListener('click', () => this.goToPrevSlide());
        this.nextButton.addEventListener('click', () => this.goToNextSlide());
        
        this.dots.forEach((dot, index) => {
          dot.addEventListener('click', () => this.goToSlide(index));
        });

        let startX = 0;
        let isDragging = false;

        this.track.addEventListener('touchstart', (e) => {
          startX = e.touches[0].clientX;
          isDragging = true;
        });

        this.track.addEventListener('touchmove', (e) => {
          if (!isDragging) return;
          e.preventDefault();
        });

        this.track.addEventListener('touchend', (e) => {
          if (!isDragging) return;
          isDragging = false;
          
          const endX = e.changedTouches[0].clientX;
          const diffX = startX - endX;
          
          if (Math.abs(diffX) > 50) {
            if (diffX > 0) {
              this.goToNextSlide();
            } else {
              this.goToPrevSlide();
            }
          }
        });
      }

      goToPrevSlide() {
        this.currentSlide = this.currentSlide > 0 ? this.currentSlide - 1 : this.totalSlides - 1;
        this.updateCarousel();
      }

      goToNextSlide() {
        this.currentSlide = this.currentSlide < this.totalSlides - 1 ? this.currentSlide + 1 : 0;
        this.updateCarousel();
      }

      goToSlide(index) {
        this.currentSlide = index;
        this.updateCarousel();
      }

      updateCarousel() {
        const translateX = -this.currentSlide * 100;
        this.track.style.transform = `translateX(${translateX}%)`;
        
        this.dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === this.currentSlide);
        });
      }
    }

    customElements.define('image-carousel-{{ ai_gen_id }}', ImageCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Image carousel",
  "settings": [
    {
      "type": "header",
      "content": "Images"
    },
    {
      "type": "image_picker",
      "id": "image_1",
      "label": "Image 1"
    },
    {
      "type": "textarea",
      "id": "description_1",
      "label": "Description 1"
    },
    {
      "type": "image_picker",
      "id": "image_2",
      "label": "Image 2"
    },
    {
      "type": "textarea",
      "id": "description_2",
      "label": "Description 2"
    },
    {
      "type": "image_picker",
      "id": "image_3",
      "label": "Image 3"
    },
    {
      "type": "textarea",
      "id": "description_3",
      "label": "Description 3"
    },
    {
      "type": "image_picker",
      "id": "image_4",
      "label": "Image 4"
    },
    {
      "type": "textarea",
      "id": "description_4",
      "label": "Description 4"
    },
    {
      "type": "image_picker",
      "id": "image_5",
      "label": "Image 5"
    },
    {
      "type": "textarea",
      "id": "description_5",
      "label": "Description 5"
    },
    {
      "type": "image_picker",
      "id": "image_6",
      "label": "Image 6"
    },
    {
      "type": "textarea",
      "id": "description_6",
      "label": "Description 6"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Description typography"
    },
    {
      "type": "font_picker",
      "id": "description_font",
      "label": "Font",
      "default": "assistant_n4"
    },
    {
      "type": "range",
      "id": "description_font_size",
      "min": 12,
      "max": 32,
      "step": 1,
      "unit": "px",
      "label": "Font size",
      "default": 16
    },
    {
      "type": "range",
      "id": "description_line_height",
      "min": 1,
      "max": 2,
      "step": 0.1,
      "label": "Line height",
      "default": 1.4
    },
    {
      "type": "range",
      "id": "description_letter_spacing",
      "min": -2,
      "max": 4,
      "step": 0.1,
      "unit": "px",
      "label": "Letter spacing",
      "default": 0
    },
    {
      "type": "select",
      "id": "description_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "description_padding",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Padding",
      "default": 20
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "description_background",
      "label": "Description background",
      "default": "#f8f8f8"
    },
    {
      "type": "color",
      "id": "description_color",
      "label": "Description text",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "button_background",
      "label": "Button background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_background",
      "label": "Button hover background",
      "default": "#f0f0f0"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button icon",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "dot_active_color",
      "label": "Active dot",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "dot_inactive_color",
      "label": "Inactive dot",
      "default": "#cccccc"
    }
  ],
  "presets": [
    {
      "name": "Image carousel"
    }
  ]
}
{% endschema %}