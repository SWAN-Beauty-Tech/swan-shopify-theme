{% doc %}
  @prompt
    Large image product hotspots with 15 spots, each product spot should not be able to add products from catalog but just insert text, and we should have different image selection for both dekstop and mobile, the spots should not be numbered but just dotted circle with blinking animation, reduce it to 10 spots and delete excess space on the banner

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-hotspot-image-container-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    max-width: 100%;
  }

  .ai-hotspot-image-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    height: auto;
    display: block;
  }

  .ai-hotspot-image-placeholder-{{ ai_gen_id }} {
    background-color: #f4f4f4;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    min-height: 300px;
  }

  .ai-hotspot-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 8px 16px;
    font-size: 14px;
    color: #666;
    text-align: center;
    pointer-events: none;
  }

  .ai-hotspot-image-placeholder-{{ ai_gen_id }} svg {
    width: 100%;
    height: 100%;
    max-width: 400px;
    max-height: 300px;
  }

  .ai-hotspot-{{ ai_gen_id }} {
    position: absolute;
    top: var(--ai-hotspot-y-{{ ai_gen_id }});
    left: var(--ai-hotspot-x-{{ ai_gen_id }});
    transform: translate(-50%, -50%);
    z-index: 2;
  }

  .ai-hotspot-button-{{ ai_gen_id }} {
    width: {{ block.settings.hotspot_size }}px;
    height: {{ block.settings.hotspot_size }}px;
    border-radius: 50%;
    background-color: {{ block.settings.hotspot_color }};
    border: 2px solid {{ block.settings.hotspot_border_color }};
    padding: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    animation: ai-hotspot-blink-{{ ai_gen_id }} 2s infinite;
  }

  .ai-hotspot-button-{{ ai_gen_id }}:hover {
    transform: scale(1.1);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);animation-play-state: paused;
  }

  @keyframes ai-hotspot-blink-{{ ai_gen_id }} {
    0%, 50% {
      opacity: 1;
    }
    25%, 75% {
      opacity: 0.6;
    }
  }

  .ai-hotspot-popup-{{ ai_gen_id }} {
    position: absolute;
    width: {{ block.settings.popup_width }}px;
    background-color: {{ block.settings.popup_bg_color }};
    border-radius: 8px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    padding: 15px;
    color: {{ block.settings.popup_text_color }};
    z-index: 3;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;
    pointer-events: none;
    min-height: 50px;
  }

  .ai-hotspot-popup-{{ ai_gen_id }}.active {
    opacity: 1;
    visibility: visible;
    pointer-events: auto;
  }

  .ai-hotspot-popup-{{ ai_gen_id }}--top {
    bottom: calc(100% + 10px);
    left: 50%;
    transform: translateX(-50%) translateY(10px);
  }

  .ai-hotspot-popup-{{ ai_gen_id }}--top.active {
    transform: translateX(-50%) translateY(0);
  }

  .ai-hotspot-popup-{{ ai_gen_id }}--bottom {
    top: calc(100% + 10px);
    left: 50%;
    transform: translateX(-50%) translateY(-10px);
  }

  .ai-hotspot-popup-{{ ai_gen_id }}--bottom.active {
    transform: translateX(-50%) translateY(0);
  }

  .ai-hotspot-popup-{{ ai_gen_id }}--left {
    right: calc(100% + 10px);
    top: 50%;
    transform: translateY(-50%) translateX(10px);
  }

  .ai-hotspot-popup-{{ ai_gen_id }}--left.active {
    transform: translateY(-50%) translateX(0);
  }

  .ai-hotspot-popup-{{ ai_gen_id }}--right {
    left: calc(100% + 10px);
    top: 50%;
    transform: translateY(-50%) translateX(-10px);
  }

  .ai-hotspot-popup-{{ ai_gen_id }}--right.active {
    transform: translateY(-50%) translateX(0);
  }

  .ai-hotspot-popup-content-{{ ai_gen_id }} {
    position: relative;
  }

  .ai-hotspot-popup-close-{{ ai_gen_id }} {
    position: absolute;
    top: -5px;
    right: -5px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 5px;
    color: {{ block.settings.popup_text_color }};
    opacity: 0.7;
  }

  .ai-hotspot-popup-close-{{ ai_gen_id }}:hover {
    opacity: 1;
  }

  .ai-hotspot-text-{{ ai_gen_id }} {
    font-size: 14px;
    line-height: 1.4;
  }

  .ai-hotspot-empty-text-{{ ai_gen_id }} {
    font-size: 14px;
    color: #999;
    text-align: center;
    padding: 10px;
    font-style: italic;
  }

  @media screen and (max-width: 749px) {
    .ai-hotspot-button-{{ ai_gen_id }} {
      width: {{ block.settings.hotspot_size | times: 0.8 }}px;
      height: {{ block.settings.hotspot_size | times: 0.8 }}px;
    }

    .ai-hotspot-popup-{{ ai_gen_id }} {
      width: {{ block.settings.popup_width | times: 0.8 }}px;
    }

    .ai-hotspot-image-desktop-{{ ai_gen_id }} {
      display: none;
    }

    .ai-hotspot-image-mobile-{{ ai_gen_id }} {
      display: block;
    }
  }

  @media screen and (min-width: 750px) {
    .ai-hotspot-image-desktop-{{ ai_gen_id }} {
      display: block;
    }

    .ai-hotspot-image-mobile-{{ ai_gen_id }} {
      display: none;
    }
  }
{% endstyle %}<text-hotspots-{{ ai_gen_id }}
  class="ai-hotspot-image-container-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-hotspot-image-wrapper-{{ ai_gen_id }}">
    {% if block.settings.desktop_image or block.settings.mobile_image %}
      {% if block.settings.desktop_image %}
        <img
          src="{{ block.settings.desktop_image | image_url: width: 2000 }}"
          alt="{{ block.settings.desktop_image.alt | escape }}"
          loading="lazy"
          width="{{ block.settings.desktop_image.width }}"
          height="{{ block.settings.desktop_image.height }}"
          class="ai-hotspot-image-desktop-{{ ai_gen_id }}"
        >
      {% endif %}
      
      {% if block.settings.mobile_image %}
        <img
          src="{{ block.settings.mobile_image | image_url: width: 1000 }}"
          alt="{{ block.settings.mobile_image.alt | escape }}"
          loading="lazy"
          width="{{ block.settings.mobile_image.width }}"
          height="{{ block.settings.mobile_image.height }}"
          class="ai-hotspot-image-mobile-{{ ai_gen_id }}"
        >
      {% endif %}
    {% else %}
      <div class="ai-hotspot-image-placeholder-{{ ai_gen_id }}">
        {{ 'image' | placeholder_svg_tag }}<div class="ai-hotspot-empty-state-{{ ai_gen_id }}">
          Add desktop and mobile images to get started
        </div>
      </div>
    {% endif %}

    {% for i in (1..10) %}
      {% liquid
        assign hotspot_enabled_key = 'hotspot_' | append: i | append: '_enabled'
        assign hotspot_x_key = 'hotspot_' | append: i | append: '_x'
        assign hotspot_y_key = 'hotspot_' | append: i | append: '_y'
        assign hotspot_text_key = 'hotspot_' | append: i | append: '_text'

        assign hotspot_enabled = block.settings[hotspot_enabled_key]
        assign hotspot_x = block.settings[hotspot_x_key]
        assign hotspot_y = block.settings[hotspot_y_key]
        assign hotspot_text = block.settings[hotspot_text_key]
      %}

      {% if hotspot_enabled %}
        <div
          class="ai-hotspot-{{ ai_gen_id }} ai-hotspot-{{ ai_gen_id }}-{{ i }}"
          style="
            --ai-hotspot-x-{{ ai_gen_id }}: {{ hotspot_x }}%;
            --ai-hotspot-y-{{ ai_gen_id }}: {{ hotspot_y }}%;
          "
          data-hotspot-id="{{ i }}"
        >
          <button
            class="ai-hotspot-button-{{ ai_gen_id }}"
            aria-label="View hotspot {{ i }} details"
            aria-expanded="false"></button>

          <div
            class="ai-hotspot-popup-{{ ai_gen_id }} ai-hotspot-popup-{{ ai_gen_id }}--{{ block.settings.popup_position }} ai-hotspot-popup-{{ ai_gen_id }}-{{ i }}"
          >
            <div class="ai-hotspot-popup-content-{{ ai_gen_id }}">
              {% if hotspot_text != blank %}
                <div class="ai-hotspot-text-{{ ai_gen_id }}">{{ hotspot_text }}</div>
              {% else %}
                <div class="ai-hotspot-empty-text-{{ ai_gen_id }}">
                  Add text content for this hotspot
                </div>
              {% endif %}
              <button
                class="ai-hotspot-popup-close-{{ ai_gen_id }}"
                aria-label="Close">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="20"
                  height="20"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                >
                  <line x1="18" y1="6" x2="6" y2="18"></line>
                  <line x1="6" y1="6" x2="18" y2="18"></line>
                </svg>
              </button>
            </div>
          </div>
        </div>
      {% endif %}
    {% endfor %}
  </div>
</text-hotspots-{{ ai_gen_id }}><script>
  (function() {
    class TextHotspots{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.hotspots = this.querySelectorAll('.ai-hotspot-{{ ai_gen_id }}');
        this.setupEventListeners();
      }

      setupEventListeners() {
        this.hotspots.forEach((hotspot) => {
          const button = hotspot.querySelector('.ai-hotspot-button-{{ ai_gen_id }}');
          const popup = hotspot.querySelector('.ai-hotspot-popup-{{ ai_gen_id }}');
          const closeButton = popup.querySelector('.ai-hotspot-popup-close-{{ ai_gen_id }}');

          button.addEventListener('click', () => {
            this.querySelectorAll('.ai-hotspot-popup-{{ ai_gen_id }}').forEach((p) => {
              if (p !== popup) {
                p.classList.remove('active');p.previousElementSibling.setAttribute('aria-expanded', 'false');
              }
            });

            const isActive = popup.classList.contains('active');
            popup.classList.toggle('active');
            button.setAttribute('aria-expanded', !isActive);
          });

          closeButton.addEventListener('click', function () {
            popup.classList.remove('active');
            button.setAttribute('aria-expanded', 'false');
          });
        });document.addEventListener('click', (event) => {
          if (
            !event.target.closest('.ai-hotspot-popup-{{ ai_gen_id }}') &&
            !event.target.closest('.ai-hotspot-button-{{ ai_gen_id }}')
          ) {
            document.querySelectorAll('.ai-hotspot-popup-{{ ai_gen_id }}').forEach((popup) => {
              popup.classList.remove('active');
              popup.previousElementSibling.setAttribute('aria-expanded', 'false');
            });
          }
        });
      }
    }

    customElements.define('text-hotspots-{{ ai_gen_id }}', TextHotspots{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Text hotspots",
  "settings": [
    {
      "type": "header",
      "content": "Images"
    },
    {
      "type": "image_picker",
      "id": "desktop_image",
      "label": "Desktop image"
    },
    {
      "type": "image_picker",
      "id": "mobile_image",
      "label": "Mobile image"
    },
    {
      "type": "header",
      "content": "Hotspot style"
    },
    {
      "type": "range",
      "id": "hotspot_size",
      "min": 16,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Hotspot size",
      "default": 24
    },
    {
      "type": "color",
      "id": "hotspot_color",
      "label": "Hotspot color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "hotspot_border_color",
      "label": "Hotspot border color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Popup style"
    },
    {
      "type": "select",
      "id": "popup_position",
      "label": "Popup position",
      "options": [
        {
          "value": "top",
          "label": "Top"
        },
        {
          "value": "bottom",
          "label": "Bottom"
        },
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "top"
    },
    {
      "type": "range",
      "id": "popup_width",
      "min": 150,
      "max": 350,
      "step": 10,
      "unit": "px",
      "label": "Popup width",
      "default": 250
    },
    {
      "type": "color",
      "id": "popup_bg_color",
      "label": "Popup background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "popup_text_color",
      "label": "Popup text color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Hotspot 1"
    },
    {
      "type": "checkbox",
      "id": "hotspot_1_enabled",
      "label": "Enable hotspot 1"
    },
    {
      "type": "range",
      "id": "hotspot_1_x",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Horizontal position",
      "default": 25
    },
    {
      "type": "range",
      "id": "hotspot_1_y",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Vertical position",
      "default": 25
    },
    {
      "type": "textarea",
      "id": "hotspot_1_text",
      "label": "Text content"
    },
    {
      "type": "header",
      "content": "Hotspot 2"
    },
    {
      "type": "checkbox",
      "id": "hotspot_2_enabled",
      "label": "Enable hotspot 2"
    },
    {
      "type": "range",
      "id": "hotspot_2_x",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Horizontal position",
      "default": 50
    },
    {
      "type": "range",
      "id": "hotspot_2_y",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Vertical position",
      "default": 25
    },
    {
      "type": "textarea",
      "id": "hotspot_2_text",
      "label": "Text content"
    },
    {
      "type": "header",
      "content": "Hotspot 3"
    },
    {
      "type": "checkbox",
      "id": "hotspot_3_enabled",
      "label": "Enable hotspot 3"
    },
    {
      "type": "range",
      "id": "hotspot_3_x",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Horizontal position",
      "default": 75
    },
    {
      "type": "range",
      "id": "hotspot_3_y",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Vertical position",
      "default": 25
    },
    {
      "type": "textarea",
      "id": "hotspot_3_text",
      "label": "Text content"
    },
    {
      "type": "header",
      "content": "Hotspot 4"
    },
    {
      "type": "checkbox",
      "id": "hotspot_4_enabled",
      "label": "Enable hotspot 4"
    },
    {
      "type": "range",
      "id": "hotspot_4_x",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Horizontal position",
      "default": 25
    },
    {
      "type": "range",
      "id": "hotspot_4_y",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Vertical position",
      "default": 50
    },
    {
      "type": "textarea",
      "id": "hotspot_4_text",
      "label": "Text content"
    },
    {
      "type": "header",
      "content": "Hotspot 5"
    },
    {
      "type": "checkbox",
      "id": "hotspot_5_enabled",
      "label": "Enable hotspot 5"
    },
    {
      "type": "range",
      "id": "hotspot_5_x",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Horizontal position",
      "default": 50
    },
    {
      "type": "range",
      "id": "hotspot_5_y",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Vertical position",
      "default": 50
    },
    {
      "type": "textarea",
      "id": "hotspot_5_text",
      "label": "Text content"
    },
    {
      "type": "header",
      "content": "Hotspot 6"
    },
    {
      "type": "checkbox",
      "id": "hotspot_6_enabled",
      "label": "Enable hotspot 6"
    },
    {
      "type": "range",
      "id": "hotspot_6_x",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Horizontal position",
      "default": 75
    },
    {
      "type": "range",
      "id": "hotspot_6_y",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Vertical position",
      "default": 50
    },
    {
      "type": "textarea",
      "id": "hotspot_6_text",
      "label": "Text content"
    },
    {
      "type": "header",
      "content": "Hotspot 7"
    },
    {
      "type": "checkbox",
      "id": "hotspot_7_enabled",
      "label": "Enable hotspot 7"
    },
    {
      "type": "range",
      "id": "hotspot_7_x",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Horizontal position",
      "default": 25
    },
    {
      "type": "range",
      "id": "hotspot_7_y",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Vertical position",
      "default": 75
    },
    {
      "type": "textarea",
      "id": "hotspot_7_text",
      "label": "Text content"
    },
    {
      "type": "header",
      "content": "Hotspot 8"
    },
    {
      "type": "checkbox",
      "id": "hotspot_8_enabled",
      "label": "Enable hotspot 8"
    },
    {
      "type": "range",
      "id": "hotspot_8_x",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Horizontal position",
      "default": 50
    },
    {
      "type": "range",
      "id": "hotspot_8_y",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Vertical position",
      "default": 75
    },
    {
      "type": "textarea",
      "id": "hotspot_8_text",
      "label": "Text content"
    },
    {
      "type": "header",
      "content": "Hotspot 9"
    },
    {
      "type": "checkbox",
      "id": "hotspot_9_enabled",
      "label": "Enable hotspot 9"
    },
    {
      "type": "range",
      "id": "hotspot_9_x",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Horizontal position",
      "default": 75
    },
    {
      "type": "range",
      "id": "hotspot_9_y",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Vertical position",
      "default": 75
    },
    {
      "type": "textarea",
      "id": "hotspot_9_text",
      "label": "Text content"
    },
    {
      "type": "header",
      "content": "Hotspot 10"
    },
    {
      "type": "checkbox",
      "id": "hotspot_10_enabled",
      "label": "Enable hotspot 10"
    },
    {
      "type": "range",
      "id": "hotspot_10_x",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Horizontal position",
      "default": 40
    },
    {
      "type": "range",
      "id": "hotspot_10_y",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Vertical position",
      "default": 40
    },
    {
      "type": "textarea",
      "id": "hotspot_10_text",
      "label": "Text content"
    }
  ],
  "presets": [
    {
      "name": "Text hotspots"
    }
  ]
}
{% endschema %}