{% doc %}
  @prompt
    I want to build a block with a video on the right side and text on the left half. The video should be Oriented for 9:16 video formats and the text on the right side should appear when the user scrolls to this section and also slightly disappear when the user is scrolling further, leaving this section.

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-video-text-section-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    {% comment %} min-height: 100vh; {% endcomment %}
    padding: 60px 0;
    background-color: {{ block.settings.background_color }};
    gap: {{ block.settings.content_gap }}px;
    max-width: {{ settings.page_width }}px;
    margin: 0 auto;padding-left: {{ settings.spacing_grid_horizontal }}px;
    padding-right: {{ settings.spacing_grid_horizontal }}px;
  }

  .ai-video-text-content-{{ ai_gen_id }} {
    flex: 1;
    padding-right: {{ block.settings.content_gap | divided_by: 2 }}px;
    opacity: 0;
    transform: translateX(-30px);
    transition: opacity 0.8s ease, transform 0.8s ease;
  }

  .ai-video-text-content-{{ ai_gen_id }}.visible {
    opacity: 1;
    transform: translateX(0);
  }

  .ai-video-text-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.text_color }};
    margin: 0 0 {{ block.settings.text_spacing }}px 0;
    font-weight: 600;
    line-height: 1.2;
  }

  .ai-video-text-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.text_size }}px;
    color: {{ block.settings.text_color }};
    line-height: 1.6;
    margin: 0 0 {{ block.settings.text_spacing }}px 0;
  }

  .ai-video-text-button-{{ ai_gen_id }} {
    display: inline-block;
    padding: {{ block.settings.button_padding_vertical }}px {{ block.settings.button_padding_horizontal }}px;
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    text-decoration: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-size: {{ block.settings.button_text_size }}px;
    font-weight: 500;
    transition: background-color 0.3s ease, transform 0.2s ease;
  }

  .ai-video-text-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
    transform: translateY(-2px);
  }

  .ai-video-text-video-container-{{ ai_gen_id }} {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    padding-left: {{ block.settings.content_gap | divided_by: 2 }}px;
  }

  .ai-video-text-video-wrapper-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    max-width: {{ block.settings.video_max_width }}px;
    aspect-ratio: 9 / 16;
    border-radius: {{ block.settings.video_border_radius }}px;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  }

  .ai-video-text-video-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-video-text-video-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    gap: 20px;
  }

  .ai-video-text-video-placeholder-{{ ai_gen_id }} svg {
    width: 80px;
    height: 80px;
    color: #999;
  }

  .ai-video-text-empty-state-{{ ai_gen_id }} {
    color: #666;
    font-size: 16px;
    text-align: center;
    max-width: 200px;
  }

  @media screen and (max-width: 990px) {
    .ai-video-text-section-{{ ai_gen_id }} {
      flex-direction: {{ block.settings.mobile_layout }};
      min-height: auto;
      padding: 40px 0;
      gap: 40px;
    }

    .ai-video-text-content-{{ ai_gen_id }} {
      padding-right: 0;
      text-align: {{ block.settings.mobile_text_alignment }};
    }

    .ai-video-text-video-container-{{ ai_gen_id }} {
      padding-left: 0;
    }

    .ai-video-text-video-wrapper-{{ ai_gen_id }} {
      max-width: {{ block.settings.video_max_width_mobile }}px;
    }

    .ai-video-text-title-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.8 }}px;
    }
  }

  @media screen and (max-width: 749px) {
    .ai-video-text-section-{{ ai_gen_id }} {
      padding: 30px 0;
      gap: 30px;
    }

    .ai-video-text-video-wrapper-{{ ai_gen_id }} {
      max-width: {{ block.settings.video_max_width_mobile | times: 0.9 }}px;
    }
  }
{% endstyle %}

<video-text-section-{{ ai_gen_id }}
  class="ai-video-text-section-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-video-text-content-{{ ai_gen_id }}">
    {% if block.settings.heading != blank %}
      <h2 class="ai-video-text-title-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
    {% endif %}

    {% if block.settings.description != blank %}
      <div class="ai-video-text-description-{{ ai_gen_id }}">{{ block.settings.description }}</div>
    {% endif %}

    {% if block.settings.button_text != blank and block.settings.button_link != blank %}
      <a href="{{ block.settings.button_link }}" class="ai-video-text-button-{{ ai_gen_id }}">
        {{ block.settings.button_text }}
      </a>
    {% endif %}
  </div>

  <div class="ai-video-text-video-container-{{ ai_gen_id }}">
    <div class="ai-video-text-video-wrapper-{{ ai_gen_id }}">
      {% if block.settings.video %}
        <video
          class="ai-video-text-video-{{ ai_gen_id }}"
          autoplay
          muted
          loop
          playsinline
          preload="metadata"
        >
          <source src="{{ block.settings.video }}" type="video/mp4"></video>
      {% else %}
        <div class="ai-video-text-video-placeholder-{{ ai_gen_id }}">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <polygon points="23 7 16 12 23 17 23 7"></polygon>
            <rect x="1" y="5" width="15" height="14" rx="2" ry="2"></rect>
          </svg>
          <div class="ai-video-text-empty-state-{{ ai_gen_id }}">
            Next, add a video for 9:16 format
          </div>
        </div>
      {% endif %}
    </div>
  </div>
</video-text-section-{{ ai_gen_id }}>

<script>
  (function() {
    class VideoTextSection{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.content = this.querySelector('.ai-video-text-content-{{ ai_gen_id }}');
        this.observer = null;
      }

      connectedCallback() {
        this.setupScrollAnimation();
      }

      disconnectedCallback() {
        if (this.observer) {
          this.observer.disconnect();
        }
      }

      setupScrollAnimation() {
        const options = {
          root: null,
          rootMargin: '-20% 0px -20% 0px',
          threshold: [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
        };

        this.observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            const ratio = entry.intersectionRatio;
            if (ratio > 0.1) {
              this.content.classList.add('visible');
              const opacity = Math.min(1, ratio * 1.5);
              this.content.style.opacity = opacity;
            } else {
              this.content.classList.remove('visible');
              this.content.style.opacity = '0';
            }
          });
        }, options);

        this.observer.observe(this);
      }
    }

    customElements.define('video-text-section-{{ ai_gen_id }}', VideoTextSection{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Video with text",
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "label": "Heading",
      "default": "Discover our story"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description",
      "default": "<p>Experience our brand through this immersive video content that showcases our values and commitment to excellence.</p>"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button text",
      "default": "Learn more"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button link"
    },
    {
      "type": "header",
      "content": "Video"
    },
    {
      "type": "video",
      "id": "video",
      "label": "Video file"
    },
    {
      "type": "range",
      "id": "video_max_width",
      "min": 200,
      "max": 500,
      "step": 10,
      "unit": "px",
      "label": "Video max width",
      "default": 350
    },
    {
      "type": "range",
      "id": "video_max_width_mobile",
      "min": 150,
      "max": 300,
      "step": 10,
      "unit": "px",
      "label": "Video max width on mobile",
      "default": 250
    },
    {
      "type": "range",
      "id": "video_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Video border radius",
      "default": 12
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "content_gap",
      "min": 20,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Content gap",
      "default": 60
    },
    {
      "type": "select",
      "id": "mobile_layout",
      "label": "Mobile layout",
      "options": [
        {
          "value": "column",
          "label": "Text above video"
        },
        {
          "value": "column-reverse",
          "label": "Video above text"
        }
      ],
      "default": "column"
    },
    {
      "type": "select",
      "id": "mobile_text_alignment",
      "label": "Mobile text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover color",
      "default": "#333333"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 20,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 36
    },
    {
      "type": "range",
      "id": "text_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Text size",
      "default": 16
    },
    {
      "type": "range",
      "id": "text_spacing",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Text spacing",
      "default": 20
    },
    {
      "type": "header",
      "content": "Button style"
    },
    {
      "type": "range",
      "id": "button_text_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Button text size",
      "default": 16
    },
    {
      "type": "range",
      "id": "button_padding_vertical",
      "min": 8,
      "max": 20,
      "step": 2,
      "unit": "px",
      "label": "Button vertical padding",
      "default": 12
    },
    {
      "type": "range",
      "id": "button_padding_horizontal",
      "min": 16,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Button horizontal padding",
      "default": 24
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "Button border radius",
      "default": 6
    }
  ],
  "presets": [
    {
      "name": "Video with text"
    }
  ]
}
{% endschema %}